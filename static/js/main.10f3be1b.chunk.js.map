{"version":3,"sources":["components/Container/Container.module.css","components/Form/Form.module.css","components/Container/Container.js","components/Layout/Layout.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Container","children","className","style","container","Layout","Form","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","styles","form","label","input","type","pattern","title","onChange","required","button","Component","Filter","ContactList","data","onDeleteContact","list","map","id","phonenumber","onClick","App","contacts","filter","addContact","text","contact","uuidv4","find","toLowerCase","alert","deleteContact","contactId","prevState","handleFilter","getFilteredContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10f3be1b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1ysIm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__WR5Wq\",\"label\":\"Form_label__3R_pw\",\"input\":\"Form_input__1IujS\",\"button\":\"Form_button__1OAgT\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => {\r\n  return <div className={style.container}>{children}</div>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container from '../Container/Container';\r\n\r\nconst Layout = ({ children }) => (\r\n  <>\r\n    <Container>{children}</Container>\r\n  </>\r\n);\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport styles from './Form.module.css';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onSubmit(name, number);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            onChange={this.handleInputChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ data, onDeleteContact }) => {\r\n  return (\r\n    <ol className={styles.list}>\r\n      {data.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            {name}: <span className={styles.phonenumber}>{number}</span>\r\n            <button\r\n              type=\"button\"\r\n              className={styles.button}\r\n              onClick={() => onDeleteContact(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ol>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\n\nimport Layout from './components/Layout/Layout';\nimport Form from './components/Form/Form';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = contacts === null ? [] : JSON.parse(contacts);\n    this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (text, number) => {\n    const contact = {\n      name: text,\n      number,\n      id: uuidv4(),\n    };\n\n    const isExistedName = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === text.toLowerCase(),\n    );\n    if (isExistedName) {\n      alert(text + ' is already in your contacts');\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  handleFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n    return filteredContacts;\n  };\n\n  render() {\n    console.log('render');\n    return (\n      <Layout>\n        <h1>PhoneBook</h1>\n        <Form onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.handleFilter} />\n        <ContactList\n          data={this.getFilteredContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Snh_\",\"phonenumber\":\"ContactList_phonenumber__-bxq_\",\"button\":\"ContactList_button__2JbM_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3i1WF\",\"input\":\"Filter_input__24Sjv\"};"],"sourceRoot":""}